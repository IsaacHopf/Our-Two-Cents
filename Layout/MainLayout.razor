@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" IsDarkMode="@_darkMode"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudStack Row="true" Class="h-100" StretchItems="StretchItems.End" Spacing="0">
        
        <MudPaper Elevation="1" Style="height: 100%; width: 56px; background-color: #CFD8DC" Square="true">
            <div style="width: 56px; height: 56px; display: flex; align-items: center; justify-content: center;">
                <MudIcon Icon="@Icons.Material.Rounded.SupervisedUserCircle" Size="Size.Large" Color="Color.Primary"/>
            </div>
            <MudNavMenu>
                <NavMenuItem Href="/budgets" Icon="@Icons.Material.Rounded.AttachMoney" Text="Budgets"/>
                <NavMenuItem Href="/categories" Icon="@Icons.Material.Rounded.Category" Text="Categories"/>
                <NavMenuItem Href="/fixed-budget" Icon="@Icons.Material.Rounded.PushPin" Text="Fixed Budget"/>
                <NavMenuItem Href="/reports" Icon="@Icons.Material.Rounded.CollectionsBookmark" Text="Reports"/>
            </MudNavMenu>
        </MudPaper>
        
        <div>
            <ErrorBoundary @ref="@_errorBoundary">
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <Error Exception="@context" ErrorBoundary="@_errorBoundary"/>
                </ErrorContent>
            </ErrorBoundary>
        </div>
        
    </MudStack>
    
    
    
    
    
    @*<MudDrawerContainer style="height: 100%;">
        <MudDrawer Open="@false" Fixed="@false" Elevation="1" Variant="@DrawerVariant.Mini" OpenMiniOnHover="@true" Breakpoint="Breakpoint.None">
            <NavMenu/>
            $1$<MudPaper Square="true" Elevation="1">
            <NavMenuItem Href="/budgets" Icon="@Icons.Material.Rounded.AttachMoney" Text="Budgets"/>
            <NavMenuItem Href="/categories" Icon="@Icons.Material.Rounded.Category" Text="Categories"/>
            <NavMenuItem Href="/fixed-budget" Icon="@Icons.Material.Rounded.PushPin" Text="Fixed Budget"/>
            <NavMenuItem Href="/reports" Icon="@Icons.Material.Rounded.CollectionsBookmark" Text="Reports"/>
            <MudIconButton OnClick="@ToggleDarkMode" Icon="@_darkModeIcon" Edge="Edge.End"
                           Color="Color.Inherit" Size="Size.Small" Class="opacity-50 mt-auto"/>
        </MudPaper>#1#
        </MudDrawer>

        <div class="pa-6">
            <ErrorBoundary @ref="@_errorBoundary">
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <Error Exception="@context" ErrorBoundary="@_errorBoundary"/>
                </ErrorContent>
            </ErrorBoundary>
        </div>
    </MudDrawerContainer>*@

    
    
    
    
    @*<MudDrawer Open="true">
        <NavMenu/>
        <MudIconButton OnClick="@ToggleDarkMode" Icon="@_darkModeIcon" Edge="Edge.End"
                       Color="Color.Inherit" Size="Size.Small" Class="opacity-50 mt-auto"/>
    </MudDrawer>
    
    <MudMainContent>
        <div class="pa-6">
            <ErrorBoundary @ref="@_errorBoundary">
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <Error Exception="@context" ErrorBoundary="@_errorBoundary"/>
                </ErrorContent>
            </ErrorBoundary>
        </div>
    </MudMainContent>*@

</MudLayout>

@code 
{
    private ErrorBoundary? _errorBoundary;

    private bool _darkMode = false;
    private string _darkModeIcon = Icons.Material.Rounded.DarkMode;

    private void ToggleDarkMode()
    {
        _darkMode = !_darkMode;
        _darkModeIcon = _darkMode
            ? Icons.Material.Rounded.LightMode
            : Icons.Material.Rounded.DarkMode;
    }

    private readonly MudTheme _theme = new()
    {
        PaletteLight = new PaletteLight
        {
            Primary = Colors.Blue.Darken4
        },
        PaletteDark = new PaletteDark
        {
            Primary = Colors.Blue.Darken1
        }
    };
}